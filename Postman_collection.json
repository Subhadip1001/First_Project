{
  "info": {
    "_postman_id": "YOUR_COLLECTION_ID_HERE",
    "name": "Test Backend API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "YOUR_EXPORTER_ID_HERE",
    "description": "This Postman collection provides a complete and organized set of API endpoints for a backend built with Express.js, MongoDB, and JWT authentication. It is an essential tool for developers to test and interact with the server's functionalities.\n\n### Key Features of the Backend:\n\n- **JWT Authentication**: Securely manage user sessions with endpoints for `signup`, `login`, and `logout` using JSON Web Tokens.\n- **Role-Based Access Control**: Verify permissions for different user roles—Manager, Team Lead, and Executive—and test role-specific endpoints.\n- **Comprehensive Data Management**: The collection includes full CRUD (Create, Read, Update, Delete) functionality for core models like `Users`, `Teams`, `Projects`, and `Reviews`, allowing for a thorough test of data persistence and manipulation.\n- **Dashboard & Reporting**: Test dedicated endpoints for fetching dashboard statistics for managers, as well as dynamic team reports that aggregate project data for individual team members.\n- **Security Measures**: The backend is hardened with various security features, including password hashing with `bcryptjs`, rate limiting to prevent abuse, and data sanitization to protect against common web vulnerabilities.\n\n### Getting Started:\n\n1.  Import this collection into Postman.\n2.  Set up your environment variables for `jwt_token`, `user_id`, `team_id`, and others. The `login`, `create user`, and `create team` requests are configured with pre-request scripts to automatically capture and set these variables for a seamless testing workflow.\n3.  Follow the structured folders to test endpoints in a logical sequence, starting with Authentication and moving to protected resources."
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "User Signup",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"passwordConfirm\": \"password123\",\n    \"role\": \"executive\",\n    \"refId\": \"executive\"\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/auth/signup",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "auth",
                "signup"
              ]
            },
            "description": "Handles user registration for all roles using a reference ID."
          },
          "response": []
        },
        {
          "name": "User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"jwt_token\", jsonData.token);",
                  "pm.environment.set(\"user_id\", jsonData.data.user._id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/auth/login",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "description": "Authenticates a user and returns a JWT token. The token is automatically saved as an environment variable."
          },
          "response": []
        },
        {
          "name": "User Logout",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:5000/api/auth/logout",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "auth",
                "logout"
              ]
            },
            "description": "Logs out the current user by clearing the JWT cookie."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users (Protected)",
      "description": "These endpoints require an authenticated user.",
      "item": [
        {
          "name": "Get Current User (Me)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/users/me",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "users",
                "me"
              ]
            },
            "description": "Retrieves the profile of the currently authenticated user."
          },
          "response": []
        },
        {
          "name": "Update Current User",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Test User\",\n    \"email\": \"updated_test@example.com\"\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/users/updateMe",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "users",
                "updateMe"
              ]
            },
            "description": "Allows the currently authenticated user to update their own profile information."
          },
          "response": []
        },
        {
          "name": "Delete Current User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/users/deleteMe",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "users",
                "deleteMe"
              ]
            },
            "description": "Deactivates the currently authenticated user's account."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users (Manager Only)",
      "description": "These endpoints require a user with 'manager' role to be authenticated.",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/users",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "users"
              ]
            },
            "description": "Retrieves a list of all users in the system. Accessible only by managers."
          },
          "response": []
        },
        {
          "name": "Create New User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Team Lead\",\n    \"email\": \"teamlead@example.com\",\n    \"password\": \"password123\",\n    \"passwordConfirm\": \"password123\",\n    \"role\": \"team_lead\",\n    \"refId\": \"teamlead\"\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/users",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "users"
              ]
            },
            "description": "Creates a new user with a specified role and reference ID. Accessible only by managers."
          },
          "response": []
        },
        {
          "name": "Get User By ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/users/{{user_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "users",
                "{{user_id}}"
              ]
            },
            "description": "Retrieves a specific user's details by their ID. Accessible only by managers."
          },
          "response": []
        },
        {
          "name": "Update User By ID",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Name\",\n    \"role\": \"executive\"\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/users/{{user_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "users",
                "{{user_id}}"
              ]
            },
            "description": "Updates a user's details by their ID. Accessible only by managers."
          },
          "response": []
        },
        {
          "name": "Delete User By ID",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/users/{{user_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "users",
                "{{user_id}}"
              ]
            },
            "description": "Deletes a user by their ID. Accessible only by managers."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Teams (Protected)",
      "description": "These endpoints require an authenticated user.",
      "item": [
        {
          "name": "Get All Teams",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/teams",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "teams"
              ]
            },
            "description": "Retrieves a list of all teams. Accessible by all authenticated users."
          },
          "response": []
        },
        {
          "name": "Create Team (Manager Only)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"team_id\", jsonData.data.team._id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Development Team\",\n    \"description\": \"Team responsible for backend development.\",\n    \"teamLeads\": [],\n    \"executives\": []\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/teams",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "teams"
              ]
            },
            "description": "Creates a new team. This action is restricted to the 'manager' role."
          },
          "response": []
        },
        {
          "name": "Get Team By ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/teams/{{team_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "teams",
                "{{team_id}}"
              ]
            },
            "description": "Retrieves a specific team's details by its ID."
          },
          "response": []
        },
        {
          "name": "Update Team By ID",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"description\": \"Updated description for Development Team\"\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/teams/{{team_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "teams",
                "{{team_id}}"
              ]
            },
            "description": "Updates a team's details by its ID. This action is restricted to the 'manager' role."
          },
          "response": []
        },
        {
          "name": "Add Team Member",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"{{user_id}}\",\n    \"role\": \"executive\"\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/teams/{{team_id}}/add-member",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "teams",
                "{{team_id}}",
                "add-member"
              ]
            },
            "description": "Adds a new member to a team. Accessible by managers and team leads."
          },
          "response": []
        },
        {
          "name": "Delete Team By ID",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/teams/{{team_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "teams",
                "{{team_id}}"
              ]
            },
            "description": "Deletes a team by its ID. This action is restricted to the 'manager' role."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Dashboard (Manager and Team Lead)",
      "description": "These endpoints require a user with 'manager' or 'team_lead' role to be authenticated.",
      "item": [
        {
          "name": "Get Dashboard Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/dashboard/stats",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "dashboard",
                "stats"
              ]
            },
            "description": "Retrieves dashboard statistics, including team member count and project statuses."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Projects (Manager and Team Lead)",
      "description": "These endpoints are protected and restricted to the `manager` and `team_lead` roles.",
      "item": [
        {
          "name": "Create Project",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"project_id\", jsonData.data.data._id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"companyName\": \"New Project Co.\",\n    \"invoiceNumber\": \"INV-12345\",\n    \"clientName\": \"Jane Doe\",\n    \"startDate\": \"2025-08-01T00:00:00.000Z\",\n    \"serviceName\": \"Video Editing\",\n    \"projectValue\": 1500,\n    \"status\": \"Pending\",\n    \"assignedTo\": \"{{user_id}}\"\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/projects",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "projects"
              ]
            },
            "description": "Creates a new project. The authenticated user (manager or team lead) is assigned as the project manager."
          },
          "response": []
        },
        {
          "name": "Get All Projects",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/projects",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "projects"
              ]
            },
            "description": "Retrieves all projects managed by the authenticated user (manager or team lead)."
          },
          "response": []
        },
        {
          "name": "Get Project Payouts (Manager Only)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/projects/payout",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "projects",
                "payout"
              ]
            },
            "description": "Retrieves a list of payout information for all projects. This endpoint is restricted to the 'manager' role."
          },
          "response": []
        },
        {
          "name": "Get Project by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/projects/{{project_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "projects",
                "{{project_id}}"
              ]
            },
            "description": "Retrieves a specific project by its ID. Accessible to managers and team leads who are the project manager."
          },
          "response": []
        },
        {
          "name": "Update Project by ID",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"Completed\",\n    \"endDate\": \"2025-08-05T00:00:00.000Z\"\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/projects/{{project_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "projects",
                "{{project_id}}"
              ]
            },
            "description": "Updates a project's details by its ID. Accessible to managers and team leads who are the project manager."
          },
          "response": []
        },
        {
          "name": "Delete Project by ID (Manager only)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/projects/{{project_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "projects",
                "{{project_id}}"
              ]
            },
            "description": "Deletes a project by its ID. This action is restricted to the 'manager' role."
          },
          "response": []
        },
        {
          "name": "Assign Task to User in Project",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"taskId\": \"{{task_id_here}}\",\n    \"assignedTo\": \"{{user_id}}\"\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/projects/{{project_id}}/assign-task",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "projects",
                "{{project_id}}",
                "assign-task"
              ]
            },
            "description": "Assigns a task within a project to a specific user. This is a key part of the 'Transfer Projects' feature."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Reviews (Manager Only)",
      "description": "These endpoints are protected and restricted to the `manager` role.",
      "item": [
        {
          "name": "Create Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"clientName\": \"John Smith\",\n    \"contactNo\": \"123-456-7890\",\n    \"startDate\": \"2025-07-01T00:00:00.000Z\",\n    \"serviceName\": \"Graphic Design\",\n    \"designation\": \"CEO\",\n    \"emailId\": \"john.smith@example.com\",\n    \"endDate\": \"2025-07-31T00:00:00.000Z\"\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/reviews",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "reviews"
              ]
            },
            "description": "Creates a new review. Restricted to the 'manager' role."
          },
          "response": []
        },
        {
          "name": "Get All Reviews",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/reviews",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "reviews"
              ]
            },
            "description": "Retrieves all reviews. Restricted to the 'manager' role."
          },
          "response": []
        },
        {
          "name": "Get Review by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/reviews/{{review_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "reviews",
                "{{review_id}}"
              ]
            },
            "description": "Retrieves a specific review by its ID. Restricted to the 'manager' role."
          },
          "response": []
        },
        {
          "name": "Update Review by ID",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"clientName\": \"John Smith Updated\",\n    \"contactNo\": \"987-654-3210\"\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/reviews/{{review_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "reviews",
                "{{review_id}}"
              ]
            },
            "description": "Updates a review by its ID. This endpoint has a `PATCH` method in the routes, but a `PUT` method is often used for full replacements. The route file shows `PATCH`."
          },
          "response": []
        },
        {
          "name": "Delete Review by ID",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/reviews/{{review_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "reviews",
                "{{review_id}}"
              ]
            },
            "description": "Deletes a review by its ID. Restricted to the 'manager' role."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Team Lead Reviews",
      "description": "These endpoints are for Team Leads to manage reviews. The route file restricts access to 'TL'.",
      "item": [
        {
          "name": "Get Filtered Reviews",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/tl/reviews?month=8",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "tl",
                "reviews"
              ],
              "query": [
                {
                  "key": "month",
                  "value": "8",
                  "description": "Filter by month (e.g., 1 for January, 8 for August)",
                  "disabled": false
                },
                {
                  "key": "day",
                  "value": "3",
                  "description": "Filter by day of the month",
                  "disabled": true
                }
              ]
            },
            "description": "Retrieves reviews filtered by month or day. This endpoint is restricted to the 'TL' role."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Reports (Manager Only)",
      "description": "These endpoints are protected and restricted to the 'manager' role.",
      "item": [
        {
          "name": "Get Team Report",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/reports/team-report",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "reports",
                "team-report"
              ]
            },
            "description": "Retrieves a report of all team members under the manager, including project statistics and deadlines."
          },
          "response": []
        },
        {
          "name": "Get Projects for a Team Member",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/reports/team-report/projects/{{user_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "reports",
                "team-report",
                "projects",
                "{{user_id}}"
              ]
            },
            "description": "Retrieves a list of projects for a specific team member, identified by `userId`."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Salary API (Manager Only)",
      "description": "These endpoints are for managers to manage salaries.",
      "item": [
        {
          "name": "Get All Salaries",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/salaries",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "salaries"
              ]
            },
            "description": "Retrieves a list of all team members and their latest salary information for a manager's report."
          },
          "response": []
        },
        {
          "name": "Add Salary Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 4000,\n    \"month\": \"August\",\n    \"year\": 2025\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/salaries/{{user_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "salaries",
                "{{user_id}}"
              ]
            },
            "description": "Adds a new salary payment record for a specific user."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Received Data API (Manager Only)",
      "description": "These endpoints allow managers to manage incoming client data.",
      "item": [
        {
          "name": "Create Received Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"companyName\": \"Client Inc.\",\n    \"invoiceNumber\": \"INV-98765\",\n    \"clientName\": \"John Doe\",\n    \"serviceName\": \"Content Writing\",\n    \"tasks\": [\n        {\n            \"service\": \"Content Writing\",\n            \"status\": \"Pending\"\n        }\n    ]\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/received-data",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "received-data"
              ]
            },
            "description": "Creates a new 'received data' entry. Restricted to the 'manager' role."
          },
          "response": []
        },
        {
          "name": "Get All Received Data",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/received-data",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "received-data"
              ]
            },
            "description": "Retrieves all data received by the manager."
          },
          "response": []
        },
        {
          "name": "Get Received Data by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/received-data/{{received_data_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "received-data",
                "{{received_data_id}}"
              ]
            },
            "description": "Retrieves a single 'received data' entry by its ID."
          },
          "response": []
        },
        {
          "name": "Update Received Data by ID",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"clientName\": \"Updated Client Name\"\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/received-data/{{received_data_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "received-data",
                "{{received_data_id}}"
              ]
            },
            "description": "Updates a 'received data' entry."
          },
          "response": []
        },
        {
          "name": "Delete Received Data by ID",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/received-data/{{received_data_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "received-data",
                "{{received_data_id}}"
              ]
            },
            "description": "Deletes a 'received data' entry."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Executive-Specific",
      "description": "These endpoints are protected and restricted to the 'executive' role.",
      "item": [
        {
          "name": "Get My Projects (Pending & Current)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/executive/my-projects",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "executive",
                "my-projects"
              ]
            },
            "description": "Retrieves the executive's pending and current projects."
          },
          "response": []
        },
        {
          "name": "Get My Completed Projects",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/executive/completed-projects",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "executive",
                "completed-projects"
              ]
            },
            "description": "Retrieves the executive's completed projects."
          },
          "response": []
        },
        {
          "name": "Get My Payout",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/executive/my-payout",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "executive",
                "my-payout"
              ]
            },
            "description": "Retrieves the executive's own salary and payment history."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Team Lead Reviews (Protected)",
      "description": "These endpoints are for Team Leads to manage reviews. The route file restricts access to 'TL' which is likely meant to be 'team_lead'.",
      "item": [
        {
          "name": "Create TL Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"companyName\": \"New Project Co.\",\n    \"invoiceNo\": \"INV-12345\",\n    \"serviceName\": \"Graphic Design\",\n    \"comment\": \"Great work on this project.\"\n}"
            },
            "url": {
              "raw": "http://localhost:5000/api/tl/reviews",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "tl",
                "reviews"
              ]
            },
            "description": "Creates a new review by a Team Lead."
          },
          "response": []
        },
        {
          "name": "Get All TL Reviews",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/tl/reviews",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "tl",
                "reviews"
              ]
            },
            "description": "Retrieves all reviews accessible to the authenticated Team Lead."
          },
          "response": []
        },
        {
          "name": "Get TL Review by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:5000/api/tl/reviews/{{tl_review_id}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "5000",
              "path": [
                "api",
                "tl",
                "reviews",
                "{{tl_review_id}}"
              ]
            },
            "description": "Retrieves a specific review by its ID for a Team Lead."
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "var jsonData = pm.response.json();",
          "// Set environment variables for dynamically created resources",
          "if (jsonData.data && jsonData.data.data && jsonData.data.data._id) {",
          "    pm.environment.set(\"project_id\", jsonData.data.data._id);",
          "}",
          "if (jsonData.data && jsonData.data.team && jsonData.data.team._id) {",
          "    pm.environment.set(\"team_id\", jsonData.data.team._id);",
          "}",
          "if (jsonData.data && jsonData.data.user && jsonData.data.user._id) {",
          "    pm.environment.set(\"user_id\", jsonData.data.user._id);",
          "}",
          "if (jsonData.data && jsonData.data.data && jsonData.data.data._id) {",
          "    pm.environment.set(\"received_data_id\", jsonData.data.data._id);",
          "}",
          "if (jsonData.data && jsonData.data.review && jsonData.data.review._id) {",
          "    pm.environment.set(\"review_id\", jsonData.data.review._id);",
          "}",
          "if (jsonData.data && jsonData.data.tlReview && jsonData.data.tlReview._id) {",
          "    pm.environment.set(\"tl_review_id\", jsonData.data.tlReview._id);",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "jwt_token",
      "value": "",
      "type": "string",
      "description": "Stores the JWT token for authenticated requests"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string",
      "description": "Stores the ID of the logged-in/created user"
    },
    {
      "key": "team_id",
      "value": "",
      "type": "string",
      "description": "Stores the ID of a created team"
    },
    {
      "key": "project_id",
      "value": "",
      "type": "string",
      "description": "Stores the ID of a created project"
    },
    {
      "key": "review_id",
      "value": "",
      "type": "string",
      "description": "Stores the ID of a created review"
    },
    {
      "key": "received_data_id",
      "value": "",
      "type": "string",
      "description": "Stores the ID of a created received data entry"
    },
    {
      "key": "tl_review_id",
      "value": "",
      "type": "string",
      "description": "Stores the ID of a created team lead review"
    }
  ]
}